@model InvoiceViewModel
@{
    ViewData["Title"] = "NewInvoice";
}

<div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <label for="Reference">Select the reference:</label>
            </h4>
            <select class="custom-select d-block w-100" id="References" name="References" asp-for="ListOfReferences" required>
                @foreach (var supplier in Model.ListOfReferences)
                {
                    <option value="@supplier.ID">@supplier.CompanyName</option>
                }
            </select><br />
            <ul class="list-group mb-3">
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">Reference name</h6>
                        <small class="text-muted">Contactname: </small><br />
                        <small class="text-muted">Address 1:</small><br />
                        <small class="text-muted">Address 2:</small><br />
                        <small class="text-muted">IBAN: </small><br />
                        <small class="text-muted">VAT: </small><br />
                        <small class="text-muted">Doubtfull: </small><br />
                        <small class="text-muted">Note: </small>
                    </div>
                    <span class="text-muted">ReferenceID</span>
                </li>
            </ul>
        </div>
        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Billing address</h4>
            <div class="needs-validation" novalidate>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="InvoiceNumber">Invoicenumber:</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Debit</span>
                            </div>
                            <input type="text" class="form-control" id="Invoicenumber" placeholder="Invoicenumber..." value="" required>
                            <div class="invalid-feedback">
                                Valid invoicenumber is required.
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="Invoicetype">Invoicetype:</label>
                        <select class="custom-select d-block w-100" id="InvoiceType" onchange="CheckInvoiceType(this)" name="InvoiceType" asp-for="SingleInvoice.TypeOfInvoice" required>
                            @foreach (var InvType in Enum.GetNames(typeof(InvoiceViewModel.InvoiceType)))
                            {
                                <option value="@InvType">@InvType</option>
                            }
                        </select><br />
                    </div>
                </div><br />
                <div class="mb-3">
                    <h4 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Your cart</span>
                        <span class="badge badge-secondary badge-pill">3</span>
                    </h4>
                    <div class="list-group mb-3">
                        <ul id="AddedItems" class="list-group bm-3">
                            
                        </ul>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Total (EU)</span>
                            <strong id="TotalAmount">€0</strong>
                        </li>
                    </div>
                </div>

                <div class="col-md-12 text-center">
                    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#ItemContainer">Add item</button>
                </div>
                <hr class="mb-4">
                <button class="btn btn-primary btn-lg btn-block" type="submit">Save invoice</button>
            </div>
        </div>
</div>

<div class="modal fade" id="ItemContainer" tabindex="-1" role="dialog" aria-labelledby="AddItem" aria-hidden="true" data-dismiss="DisableButton()">
    <div class="modal-dialog modal-dialog-centered" role="document" oncancel="DisableButton()">
        <div class="modal-content" oncancel="DisableButton()">
            <div class="modal-header">
                <h5 class="modal-title" id="ItemContainer">Select the item you want to add</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="exampleFormControlSelect2">Example multiple select</label>
                    <select multiple class="form-control" id="NewItem" onchange="EnableButton()" asp-for="items">
                        @foreach (var items in Model.items)
                        {
                            <option value="@items.ItemID:@items.Price:@items.Description:@items.ProductName">@items.ProductName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light btn-outline-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-warning">Manage items</button>
                <button id="btnAddItem" type="button" class="btn btn-primary" onclick="AddItem()" disabled>Add to invoice</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var AllItems = [];
    var returnItems = [];
    var parsed = "";
    function AddItem() {        
        var e = document.getElementById("NewItem");
        _id = e.options[e.selectedIndex].value;
        var checkid = _id.split(":")[0];
        var name = _id.split(":")[3];
        var desc = _id.split(":")[2];
        var price = _id.split(":")[1];
        console.log(returnItems.length);
        console.log(returnItems.length == 0);
        if (returnItems.length == 0) {
            console.log("Halooo");
            returnItems.push(_id.split(":"));
            PrintDIV(checkid, name, desc, price, true);
        }
        else {
            IsAllreadyAdded(checkid, name, desc, price);
        }
    };
    function IsAllreadyAdded(ID, Name, Desc, Price) {
        returnItems.forEach(function (item, index) {
            if (item[0] == ID) {
                console.log("werkt");
                AddAmount(ID);
            }
            else {
                PrintDIV(ID, Name, Desc, Price, true);
            }
        });
    }
    function PrintDIV(ID, Name, Description, Price, Add) {
        if (Add) {
            var div = '<li id="' + ID + '" class="list-group-item d-flex justify-content-between lh-condensed"><div><h6 class="my-0">' + Name + '</h6><small class="text-muted" style="max-width:10em; display: inline-grid; word-wrap: break-word;">' + Description + '</small></div ><div><h6 class="my-0">Amount name</h6><input id="amountof' + ID + '" class="form-control form-control-sm" type="number" value="1" min="0" max="1000" step="1" style="margin-top:10px;" /></div><strong><a id="' + ID + '" onclick="DeleteItem(this)" class="text-danger">Delete</a></strong><span class="text-muted">' + Price + '</span></li >';
            document.getElementById("AddedItems").innerHTML += div;
        }
        else {
            document.getElementById(ID).remove();
        }
    }
    function AddAmount(ID) {
        var currentDIV = document.getElementById("amountof" + ID);
        var currentAmount = parseInt(document.getElementById("amountof" + ID).value);
        console.log(currentDIV.value = currentAmount + 1);
        currentDIV.value = currentAmount + 1;
    }
    //function CheckExcisting(ID, Name, Description, Price) {
    //    var CurrentSituation = compressArray(returnItems);
    //    for (var i = 0; i < CurrentSituation.length; i++) {
    //        if (CurrentSituation[i].value.includes(ID) && CurrentSituation[i].count > 1) {
    //            AddAmount(CurrentSituation[i].value, CurrentSituation[i].count);
    //            console.log("WAT?");
    //            return true;
    //        }
    //        else if (CurrentSituation != null) {
    //            InjectDIV(ID, Name, Description, Price);
    //            console.log("hierooo");
    //            AddAmount(CurrentSituation[i].value, CurrentSituation[i].count);
    //            return true;
    //        }
    //        else {
    //            InjectDIV(ID, Name, Description, Price);
    //            AddAmount(CurrentSituation[i].value, CurrentSituation[i].count);
    //            console.log(parseInt(document.getElementById("amountof" + ID).value) + 1);
    //            return false;
    //        }
    //    }
    //}
    //function SortID(recArray) {
    //    var returnArray = [];
    //    for (var i = 0; i < recArray.length; i++) {
    //            var a = new Object();
    //        a.value = recArray[i];
    //        returnArray.push(a.value[0]);
    //    }
    //    return returnArray;
    //};
    //function compressArray(original) {
    //    original = SortID(returnItems)
    //    var compressed = [];
    //    var copy = original.slice(0);
    //    for (var i = 0; i < original.length; i++) {
    //        var myCount = 0;
    //        for (var w = 0; w < copy.length; w++) {
    //            if (original[i] == copy[w]) {
    //                myCount++;
    //                delete copy[w];
    //            }
    //        }
    //        if (myCount > 0) {
    //            var a = new Object();
    //            a.value = original[i];
    //            a.count = myCount;
    //            compressed.push(a);
    //        }
    //    }
    //    return compressed;
    //};
    //function ItemsToView() {
    //    //var returnDIV = '<li class="list-group-item d-flex justify-content-between lh-condensed"><div><h6 class="my-0">' + returnItems[0][3] + '</h6><small class="text-muted" style="max-width:10em; display: inline-grid; word-wrap: break-word;">' + returnItems[2] + '</small></div ><div><h6 class="my-0">Amount name</h6><input id="amount" class="form-control form-control-sm" type="number" value="1" min="0" max="1000" step="1" style="margin-top:10px;" /></div><strong><a id="' + returnItems[0] + '" onclick="DeleteItem(this)" class="text-danger">Delete</a></strong><strong><a id="' + returnItems[0] + '" onclick="EditItem(this)" class="text-warning">Edit</a></strong><span class="text-muted">' + returnItems[1] + '</span></li >';
    //    var nHTML = '';
    //    console.log(returnItems);
    //    for (var i = 0; i < returnItems.length; i++) {
    //        var div = '<li id="' + returnItems[i][0] + '" class="list-group-item d-flex justify-content-between lh-condensed"><div><h6 class="my-0">' + returnItems[i][3] + '</h6><small class="text-muted" style="max-width:10em; display: inline-grid; word-wrap: break-word;">' + returnItems[i][2] + '</small></div ><div><h6 class="my-0">Amount name</h6><input id="amountof' + returnItems[i][0] + '" class="form-control form-control-sm" type="number" value="1" min="0" max="1000" step="1" style="margin-top:10px;" /></div><strong><a id="' + returnItems[i][0] + '" onclick="DeleteItem(this)" class="text-danger">Delete</a></strong><strong><a id="' + returnItems[i][0] + '" onclick="EditItem(this)" class="text-warning">Edit</a></strong><span class="text-muted">' + returnItems[i][1] + '</span></li >';
    //        nHTML += div;
    //    };

    //    //AllItems.forEach(function (item) {
    //    //    nHTML += returnDIV;
    //    //});
    //    document.getElementById("AddedItems").innerHTML = nHTML
    //};
    //function CheckDubbleItems(arr) {
    //    var toReturn = arr;
    //    console.log(toReturn);
    //    var sorted_arr = toReturn.slice().sort();
    //    var dubbleItem = [];
    //    for (var i = 0; i < sorted_arr.length - 1; i++) {
    //        if (sorted_arr[i + 1] == sorted_arr[i]) {
    //            dubbleItem.push(sorted_arr[i]);
    //        }
    //    }
    //    return dubbleItem;
    //};
        //function count() {

    //    returnItems.sort();

    //    var current = null;
    //    var cnt = 0;
    //    for (var i = 0; i < returnItems.length; i++) {
    //        if (returnItems[i] != current) {
    //            if (cnt > 0) {
    //                document.write(current + ' comes --> ' + cnt + ' times<br>');
    //            }
    //            current = returnItems[i];
    //            cnt = 1;
    //        } else {
    //            cnt++;
    //        }
    //    }
    //    if (cnt > 0) {
    //        document.write(current + ' comes --> ' + cnt + ' times');
    //    }

    //}
    //function MakeArrayUniqueAgain(arr) {
    //    var uniques = [];
    //    var itemsFound = {};
    //    for (var i = 0, l = arr.length; i < l; i++) {
    //        var stringified = JSON.stringify(arr[i]);
    //        if (itemsFound[stringified]) { continue; }
    //        uniques.push(arr[i]);
    //        itemsFound[stringified] = true;
    //    }
    //    return uniques;
    //};
    //function DublicateItems(myArray) {
    //    var EndResult = [];
    //    var result = [];
    //    var frequency = myArray.reduce(function (seen, currentItem) {
    //        if (currentItem in seen) {
    //            seen[currentItem] = seen[currentItem] + 1;
    //            console.log(seen[0]);
    //        } else {
    //            seen[currentItem] = 1;
    //        }
    //        return seen;
    //    }, {});
    //    for (var key in frequency) {
    //        if (frequency[key] > 1) {
    //            result.push(key.split(",").map(function (currentItem) {
    //                return currentItem;
    //            }));
    //        }
    //    }
    //    //for (var i = 0; i < result.length; i++) {
    //    //    EndResult.push(result[i][0]);
    //    //    EndResult.push(frequency[key]);
    //    //    console.log(EndResult);
    //    //}
    //    console.log(frequency[key]);
    //    return frequency;
    //};
    function removeA(arr) {
        var what, a = arguments, L = a.length, ax;
        while (L > 1 && arr.length) {
            what = a[--L];
            while ((ax = arr.indexOf(what)) !== -1) {
                arr.splice(ax, 1);
            }
        }
        return arr;
    };
    function DeleteItem(item) {
        console.log(item.id);
        removeA(AllItems, item.id)
        console.log(AllItems);
    };
    function EditItem(item) {
        console.log(item.id);
        removeA(AllItems, item.id)
        console.log(AllItems);
    };
    function EnableButton() {
        var a = document.getElementById("btnAddItem");
        a.disabled = false;
    };
    function DisableButton() {
        var a = document.getElementById("btnAddItem");
        a.disabled = true;
    };
    function CheckInvoiceType(nameSelect) {
        if (nameSelect) {
            SelectedType = document.getElementById("InvoiceType");
            var SelectedOption = SelectedType.options[SelectedType.selectedIndex].value;
            console.log(SelectedOption);

            if (SelectedOption == "Sale") {
                document.getElementById("Sale").style.display = "block";
                document.getElementById("Purchase").style.display = "none";
                document.getElementById("CR").style.display = "none";
            }
            else if (SelectedOption == "CreditNote") {
                document.getElementById("Sale").style.display = "none";
                document.getElementById("Purchase").style.display = "none";
                document.getElementById("CR").style.display = "block";
            }
            else if (SelectedOption == "Purchase") {
                document.getElementById("Sale").style.display = "none";
                document.getElementById("Purchase").style.display = "block";
                document.getElementById("CR").style.display = "none";
            }
            else {
                document.getElementById("Sale").style.display = "none";
                document.getElementById("CR").style.display = "none";
            }
        }
        else {
            document.getElementById("Sale").style.display = "none";
            document.getElementById("CR").style.display = "none";
        }
    }
</script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript">
        $(document).ready(function () {
            $("#AddItem").click(function () {
                $("#ItemContainer").modal("hide");
            });

            $("#ItemContainer").on('hide.bs.modal', function () {
                DisableButton();
            });
        });
    </script>